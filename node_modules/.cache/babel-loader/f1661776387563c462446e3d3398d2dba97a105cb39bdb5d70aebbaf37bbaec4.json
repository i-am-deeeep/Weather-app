{"ast":null,"code":"import _classCallCheck from \"C:/A new folder/codes/weatherapp/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/A new folder/codes/weatherapp/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/A new folder/codes/weatherapp/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/A new folder/codes/weatherapp/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { formatOffset as _formatOffset, signedOffset } from \"../impl/util.js\";\nimport Zone from \"../zone.js\";\nvar singleton = null;\n\n/**\n * A zone with a fixed offset (meaning no DST)\n * @implements {Zone}\n */\nvar FixedOffsetZone = /*#__PURE__*/function (_Zone) {\n  _inherits(FixedOffsetZone, _Zone);\n  var _super = _createSuper(FixedOffsetZone);\n  function FixedOffsetZone(offset) {\n    var _this;\n    _classCallCheck(this, FixedOffsetZone);\n    _this = _super.call(this);\n    /** @private **/\n    _this.fixed = offset;\n    return _this;\n  }\n\n  /** @override **/\n  _createClass(FixedOffsetZone, [{\n    key: \"type\",\n    get: function get() {\n      return \"fixed\";\n    }\n\n    /** @override **/\n  }, {\n    key: \"name\",\n    get: function get() {\n      return this.fixed === 0 ? \"UTC\" : \"UTC\".concat(_formatOffset(this.fixed, \"narrow\"));\n    }\n  }, {\n    key: \"ianaName\",\n    get: function get() {\n      if (this.fixed === 0) {\n        return \"Etc/UTC\";\n      } else {\n        return \"Etc/GMT\".concat(_formatOffset(-this.fixed, \"narrow\"));\n      }\n    }\n\n    /** @override **/\n  }, {\n    key: \"offsetName\",\n    value: function offsetName() {\n      return this.name;\n    }\n\n    /** @override **/\n  }, {\n    key: \"formatOffset\",\n    value: function formatOffset(ts, format) {\n      return _formatOffset(this.fixed, format);\n    }\n\n    /** @override **/\n  }, {\n    key: \"isUniversal\",\n    get: function get() {\n      return true;\n    }\n\n    /** @override **/\n  }, {\n    key: \"offset\",\n    value: function offset() {\n      return this.fixed;\n    }\n\n    /** @override **/\n  }, {\n    key: \"equals\",\n    value: function equals(otherZone) {\n      return otherZone.type === \"fixed\" && otherZone.fixed === this.fixed;\n    }\n\n    /** @override **/\n  }, {\n    key: \"isValid\",\n    get: function get() {\n      return true;\n    }\n  }], [{\n    key: \"utcInstance\",\n    get:\n    /**\n     * Get a singleton instance of UTC\n     * @return {FixedOffsetZone}\n     */\n    function get() {\n      if (singleton === null) {\n        singleton = new FixedOffsetZone(0);\n      }\n      return singleton;\n    }\n\n    /**\n     * Get an instance with a specified offset\n     * @param {number} offset - The offset in minutes\n     * @return {FixedOffsetZone}\n     */\n  }, {\n    key: \"instance\",\n    value: function instance(offset) {\n      return offset === 0 ? FixedOffsetZone.utcInstance : new FixedOffsetZone(offset);\n    }\n\n    /**\n     * Get an instance of FixedOffsetZone from a UTC offset string, like \"UTC+6\"\n     * @param {string} s - The offset string to parse\n     * @example FixedOffsetZone.parseSpecifier(\"UTC+6\")\n     * @example FixedOffsetZone.parseSpecifier(\"UTC+06\")\n     * @example FixedOffsetZone.parseSpecifier(\"UTC-6:00\")\n     * @return {FixedOffsetZone}\n     */\n  }, {\n    key: \"parseSpecifier\",\n    value: function parseSpecifier(s) {\n      if (s) {\n        var r = s.match(/^utc(?:([+-]\\d{1,2})(?::(\\d{2}))?)?$/i);\n        if (r) {\n          return new FixedOffsetZone(signedOffset(r[1], r[2]));\n        }\n      }\n      return null;\n    }\n  }]);\n  return FixedOffsetZone;\n}(Zone);\nexport { FixedOffsetZone as default };","map":{"version":3,"names":["formatOffset","signedOffset","Zone","singleton","FixedOffsetZone","_Zone","_inherits","_super","_createSuper","offset","_this","_classCallCheck","call","fixed","_createClass","key","get","concat","value","offsetName","name","ts","format","equals","otherZone","type","instance","utcInstance","parseSpecifier","s","r","match","default"],"sources":["C:/A new folder/codes/weatherapp/node_modules/luxon/src/zones/fixedOffsetZone.js"],"sourcesContent":["import { formatOffset, signedOffset } from \"../impl/util.js\";\nimport Zone from \"../zone.js\";\n\nlet singleton = null;\n\n/**\n * A zone with a fixed offset (meaning no DST)\n * @implements {Zone}\n */\nexport default class FixedOffsetZone extends Zone {\n  /**\n   * Get a singleton instance of UTC\n   * @return {FixedOffsetZone}\n   */\n  static get utcInstance() {\n    if (singleton === null) {\n      singleton = new FixedOffsetZone(0);\n    }\n    return singleton;\n  }\n\n  /**\n   * Get an instance with a specified offset\n   * @param {number} offset - The offset in minutes\n   * @return {FixedOffsetZone}\n   */\n  static instance(offset) {\n    return offset === 0 ? FixedOffsetZone.utcInstance : new FixedOffsetZone(offset);\n  }\n\n  /**\n   * Get an instance of FixedOffsetZone from a UTC offset string, like \"UTC+6\"\n   * @param {string} s - The offset string to parse\n   * @example FixedOffsetZone.parseSpecifier(\"UTC+6\")\n   * @example FixedOffsetZone.parseSpecifier(\"UTC+06\")\n   * @example FixedOffsetZone.parseSpecifier(\"UTC-6:00\")\n   * @return {FixedOffsetZone}\n   */\n  static parseSpecifier(s) {\n    if (s) {\n      const r = s.match(/^utc(?:([+-]\\d{1,2})(?::(\\d{2}))?)?$/i);\n      if (r) {\n        return new FixedOffsetZone(signedOffset(r[1], r[2]));\n      }\n    }\n    return null;\n  }\n\n  constructor(offset) {\n    super();\n    /** @private **/\n    this.fixed = offset;\n  }\n\n  /** @override **/\n  get type() {\n    return \"fixed\";\n  }\n\n  /** @override **/\n  get name() {\n    return this.fixed === 0 ? \"UTC\" : `UTC${formatOffset(this.fixed, \"narrow\")}`;\n  }\n\n  get ianaName() {\n    if (this.fixed === 0) {\n      return \"Etc/UTC\";\n    } else {\n      return `Etc/GMT${formatOffset(-this.fixed, \"narrow\")}`;\n    }\n  }\n\n  /** @override **/\n  offsetName() {\n    return this.name;\n  }\n\n  /** @override **/\n  formatOffset(ts, format) {\n    return formatOffset(this.fixed, format);\n  }\n\n  /** @override **/\n  get isUniversal() {\n    return true;\n  }\n\n  /** @override **/\n  offset() {\n    return this.fixed;\n  }\n\n  /** @override **/\n  equals(otherZone) {\n    return otherZone.type === \"fixed\" && otherZone.fixed === this.fixed;\n  }\n\n  /** @override **/\n  get isValid() {\n    return true;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}